@model FYP.Web.ViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Login";
    Layout = null;

}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login and Sign Up Forms</title>
    <link rel="stylesheet" type="text/css" href="~/app-assets/css/bootstrap.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
          integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- BEGIN: Page CSS-->
    <link rel="stylesheet" type="text/css" href="~/app-assets/css/core/menu/menu-types/vertical-menu.css">
    <link rel="stylesheet" type="text/css" href="~/app-assets/css/core/colors/palette-gradient.css">
    <link rel="stylesheet" type="text/css" href="~/app-assets/css/plugins/extensions/toastr.css">
    <!-- END: Page CSS-->
    <style>
        @@media (min-width: 762px) and (max-width: 992px) {
            .heightChange {
                height: 50vh !important;
            }
        }

        @@media (min-width: 992px) {
            .heightChange {
                height: 65vh !important;
                margin-top: 7vh;
            }
        }

        /* For Chrome, Safari, Edge, and Opera */
        ::-webkit-scrollbar {
            width: 6px; /* Set the width of the scrollbar */
            height: 6px; /* Set the height of the scrollbar (for horizontal scrollbars) */
        }

        ::-webkit-scrollbar-track {
            background: transparent; /* Background of the scrollbar track */
        }

        ::-webkit-scrollbar-thumb {
            background-color: rgba(0, 0, 0, 0.2); /* Scrollbar color with transparency */
            border-radius: 10px; /* Rounded corners for the scrollbar */
        }

            ::-webkit-scrollbar-thumb:hover {
                background-color: rgba(0, 0, 0, 0.5); /* Darker on hover */
            }

    </style>

</head>

<body>
    <!-- Sign Up Form -->
    <div class="container w-75 p-md-5  shadow-lg mt-4 mb-3 ">
        <div class="row ">
            <!-- Image Portion -->
            <div class=" col-12 col-md-12 col-lg-6  d-flex flex-column justify-content-center align-items-center h-100">
                <img src="~/Logo/man-sits-table-with-laptop-drawing-man-it_1013341-185229.jpeg" class="heightChange img-fluid h-100" alt="Bahria_image">
@*                 <a href='@Url.Action("Register", "Account")' class="mt-2 text-dark mb-2">Create an account</a>
 *@
            </div>

            <!-- Text Portion -->
            <div class="col-12 col-md-12 col-lg-6  d-flex flex-column justify-content-center align-items-center ">
                <h1 class=" ps-4 fw-bolder">Login</h1>
                <form asp-action="Login" asp-controller="Account" method="post" class="form-horizontal">
                    <div class="w-100 d-flex flex-column justify-content-center align-items-center pt-3 pb-3">


                        <!-- Email Field -->
                        <div class="w-100 position-relative mt-3">
                            <div class="position-relative">
                                <i class="fa-solid fa-envelope position-absolute start-0 top-50 translate-middle-y ms-3"></i>
                                <input type="text" placeholder="Enter Your Email" asp-for="Email" name="Email" id="Email"
                                       class="w-100 border-0 border-bottom border-1 border-dark p-2 ps-5" />
                            </div>
                            <span asp-validation-for="Email" class="text-danger text-start"></span>
                        </div>

                        <!-- Password Field -->
                        <div class="w-100 position-relative mt-3">
                            <div class="position-relative">
                                <i class="fa-solid fa-lock position-absolute start-0 top-50 translate-middle-y ms-3"></i>
                                <input type="password" placeholder="Enter Your Password" asp-for="Password" name="Password" id="Password"
                                       class="w-100 border-0 border-bottom border-1 border-dark p-2 ps-5" />
                            </div>
                            <span asp-validation-for="Password" class="text-danger text-start"></span>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" class="px-3 py-2 bg-primary text-white rounded-2 mt-5 border-0">Login</button>

                    </div>
                </form>
@*                 <button onclick="showToast()">Show Toast</button>
 *@
                <div id="toast-container"></div>
            </div>


        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
    <!-- BEGIN: Vendor JS-->
    <script src="~/app-assets/vendors/js/vendors.min.js"></script>
    <!-- BEGIN Vendor JS-->
    <!-- BEGIN: Page Vendor JS-->
    <script src="~/app-assets/vendors/js/forms/icheck/icheck.min.js"></script>
    <script src="~/app-assets/vendors/js/forms/validation/jqBootstrapValidation.js"></script>
    <!-- END: Page Vendor JS-->
    <!-- BEGIN: Theme JS-->
    <script src="~/app-assets/js/core/app-menu.js"></script>
    <script src="~/app-assets/js/core/app.js"></script>
    <!-- END: Theme JS-->
    <!-- BEGIN: Page JS-->
    <script src="~/app-assets/js/scripts/forms/form-login-register.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/app-assets/js/core/libraries/jquery.min.js"></script>
    <!-- BEGIN: Page Vendor JS-->
    <script src="~/app-assets/vendors/js/extensions/toastr.min.js"></script>
    <!-- END: Page Vendor JS-->
    <!-- BEGIN: Page JS-->
    <script src="~/app-assets/js/scripts/extensions/toastr.js"></script>
    <!-- END: Page JS-->
    <script>
        $(document).ready(function () {
            $('form').on('submit', function (event) {
                let valid = true;

                // Reset previous error states
                $('.error-field').removeClass('error-field');
                $('.error-icon').removeClass('error-icon');
                $('span.text-danger').text(''); // Clear previous error messages

                // Validate each input and select
                $('input, select').each(function () {
                    const $input = $(this);
                    const $icon = $input.siblings('i'); // Get the icon sibling
                    const $validationMessage = $input.siblings('span.text-danger'); // Get validation message

                    if (!$input.val().trim()) {
                        // If the field is empty
                        $input.addClass('error-field');
                        $icon.addClass('error-icon');
                        $validationMessage.text('This field is required');
                        valid = false; // Set valid to false
                    }
                });

                if (!valid) {
                    event.preventDefault(); // Prevent form submission
                }
            });
        });
    </script>

</body>

</html>
<style>
    .error-field {
        border-color: red !important;
    }

    .error-icon {
        color: red !important;
    }

  

    #toast-container {
        position: fixed;
        top: 20px; /* Changed from bottom to top */
        right: 20px;
        z-index: 1000;
    }

    .toast {
        display: flex;
        flex-direction: column;
        background-color: #6ee7b7;
        padding: 16px;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 10px;
        width: 250px;
        opacity: 0;
        transform: translateX(100%);
        transition: transform 0.3s ease, opacity 0.3s ease;
    }

 

        .toast.show {
            opacity: 1;
            transform: translateX(0);
        }

    .toast-header {
        font-weight: bold;
        margin-bottom: 8px;
    }

    .toast-message {
        font-size: 14px;
    }


    .custom-toast {
        display: flex;
        flex-direction: column;
        background-color: #fb7185; /* Custom background color */
        padding: 16px;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 10px;
        width: 250px;
        opacity: 0; /* Initially hidden */
        transform: translateY(-20px); /* Slightly above the viewport */
        transition: opacity 0.3s ease, transform 0.5s ease;
    }

        .custom-toast.show {
            opacity: 1; /* Fully visible */
            transform: translateY(0); /* Slide to position */
        }

    .custom-toast-message {
        font-size: 14px;
    }

    .Warning-toast {
        display: flex;
        flex-direction: column;
        background-color: #facc15; /* Custom background color */
        padding: 16px;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 10px;
        width: 250px;
        opacity: 0; /* Initially hidden */
        transform: translateY(-20px); /* Slightly above the viewport */
        transition: opacity 0.3s ease, transform 0.5s ease;
    }

        .Warning-toast.show {
            opacity: 1; /* Fully visible */
            transform: translateY(0); /* Slide to position */
        }

    .Warning-toast-message {
        font-size: 14px;
    }


</style>
@if (Context.Request.Query["toastrnotification"] == "Added")
{
    <script>
        // Function to show the toast notification
        function showToast() {
            const toastContainer = document.getElementById('toast-container');

            const toast = document.createElement('div');
            toast.classList.add('toast');

            toast.innerHTML = `
                        <div class="toast-message">Account Created Successfully!</div>
                    `;

            toastContainer.appendChild(toast);

            // Show the toast
            setTimeout(() => {
                toast.classList.add('show');
                startProgressBar(toast);
            }, 100);

            // Remove the toast after 5 seconds
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300); // Allow for the transition
            }, 5000);
        }

      @*   // Function to animate the progress bar
        function startProgressBar(toast) {
            const progressBar = toast.querySelector('.progress');
            let width = 0;
            const interval = setInterval(() => {
                if (width >= 100) {
                    clearInterval(interval);
                } else {
                    width++;
                    progressBar.style.width = width + '%';
                }
            }, 50); // Adjust the speed of the progress bar here
        } *@

        // Automatically call the showToast function to display the toast
        showToast();

        // Remove the query parameters from the URL without reloading the page
        if (window.history.replaceState) {
            const newUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;
            window.history.replaceState({ path: newUrl }, '', newUrl);
        }
    </script>
}

@if (Context.Request.Query["toastrnotification"] == "NoAccount")
{
    <script>
        // Function to show the toast notification
        function showCustomToast() {
            const toastContainer = document.getElementById('toast-container');

            const toast = document.createElement('div');
            toast.classList.add('custom-toast');

            toast.innerHTML = `
                        <div class="custom-toast-message">No Account Found!</div>
                    `;

            toastContainer.appendChild(toast);

            // Show the toast
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);

            // Remove the toast after 5 seconds
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300); // Allow for the transition
            }, 5000);
        }

        // Automatically call the showCustomToast function to display the toast
        showCustomToast();

        // Remove the query parameters from the URL without reloading the page
        if (window.history.replaceState) {
            const newUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;
            window.history.replaceState({ path: newUrl }, '', newUrl);
        }
    </script>
}
@if (Context.Request.Query["toastrnotification"] == "InvalidAccountDetails")
{
    <script>
        // Function to show the toast notification
        function showCustomToast() {
            const toastContainer = document.getElementById('toast-container');

            const toast = document.createElement('div');
            toast.classList.add('Warning-toast');

            toast.innerHTML = `
                                        <div class="Warning-toast-message">Invalid Credentials!</div>
                    `;

            toastContainer.appendChild(toast);

            // Show the toast
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);

            // Remove the toast after 5 seconds
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300); // Allow for the transition
            }, 5000);
        }

        // Automatically call the showCustomToast function to display the toast
        showCustomToast();

        // Remove the query parameters from the URL without reloading the page
        if (window.history.replaceState) {
            const newUrl = window.location.protocol + "//" + window.location.host + window.location.pathname;
            window.history.replaceState({ path: newUrl }, '', newUrl);
        }
    </script>
}

