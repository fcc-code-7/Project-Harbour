@model FYP.Web.ViewModels.StudentGroupViewModel

@{
    ViewData["Title"] = "Create";
    var month = DateTime.Now.Month;
    var year = DateTime.Now.Year;
    var batch = "";
    if (month > 2 && month < 6)
    {
        batch = "Spring " + (year + 1);
    }
    else
    {
        batch = "Fall " + year;

    }
}

<!-- BEGIN: Content-->
<div class="app-content content">
    <div class="content-overlay"></div>
    <div class="content-wrapper">
        <div class="content-header row">
        </div>
        <div class="content-body ">
            <section class="users-list-wrapper">
                <div class="users-list-filter px-1">
                    <!-- Section 1 -->
                    <div class=" ">
                        <div class="p-3 bg-white text-black rounded-lg " style="height:80vh ; min-height:80vh">

                            <!-- Column 1: -->
                            <div class="" style="min-height:100px;">
                                <div class="w-full grid sm:grid-cols-1 lg:grid-cols-2 gap-4 ">
                                    <div class=" text-2xl font-bold">
                                        <h1>
                                            New Group
                                        </h1>
                                    </div>

                                </div>
                                <form class="form" id="submitform">
                                    <div class="modal-body">
                                        <div class="form-body">
                                            <div class="row ">
                                                <div class="col-12 col-md-12 col-sm-12 col-lg-12 ">
                                                    <div class="form-group">
                                                        <label>Batch</label>

                                                        <input type="text" id="Batch" class="form-control name" placeholder="Batch" value="@batch" asp-for="Batch" name="Name" readonly>
                                                    </div>
                                                    <input type="hidden" name="Year" id="Year" value="@year"/>
                                                    <div class="form-group">
                                                        <label>Group Name</label>

                                                        <input type="text" id="groupName" class="form-control name" placeholder="Group Name" asp-for="Name" name="Name" value="@Model.Name" readonly required>
                                                        <span asp-validation-for="Name" class="text-danger"></span>

                                                    </div>
                                                    <div class="form-group">
                                                        <label>Leader Enrollment No.</label>

                                                        <fieldset>
                                                            <div class="input-group">

                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text email1" id="basic-addon1"><i class="feather icon-user"></i></span>

                                                                </div>
                                                                <input type="text" class="form-control student-input" id="stu1" placeholder="Leader's Enrollment No" value="@Model.student1LEmail" asp-for="student1LEmail" aria-describedby="basic-addon1" name="student1LEmail" required>


                                                            </div>
                                                            <span asp-validation-for="student1LEmail" class="text-danger"></span>
                                                        </fieldset>
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Member1 Enrollment No.</label>

                                                        <fieldset>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text email2" id="basic-addon2"><i class="feather icon-user"></i></span>
                                                                </div>
                                                                <input type="text" class="form-control student-input" id="stu2" placeholder="Member2 Enrollment No" aria-describedby="basic-addon2" value="@Model.student2Email" asp-for="student2Email" name="student2Email" required>

                                                            </div>
                                                            <span asp-validation-for="student2Email" class="text-danger"></span>
                                                        </fieldset>
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Member2 Enrollment No.(Optional)</label>

                                                        <fieldset>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text email3" id="basic-addon3"><i class="feather icon-user"></i></span>
                                                                </div>
                                                                <input type="text" class="form-control student-input" id="stu3" placeholder="Member3 Enrollment No" value="@Model.student3Email" asp-for="student3Email" aria-describedby="basic-addon3" name="student3Email" required>

                                                            </div>
@*                                                             <span asp-validation-for="student3Email" class="text-danger"></span>
 *@                                                        </fieldset>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" class="btn btn-outline-primary " id="formsubmit">Create Group</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>

                </div>
            </section>
        </div>
    </div>
</div>
<!-- END: Content-->
<!-- Modal -->
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

@if (ViewBag.success != null && ViewBag.registeredMessage != null)
{
    <script>
        Swal.fire({
            title: 'Registration Conflict!',             // Main title
            html: '<span class="text-danger">@ViewBag.registeredMessage<br />  Already Registered!</span>', // Message styled with danger color
            icon: 'warning',                             // Warning icon for alerts
            confirmButtonText: 'OK',                     // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-danger'          // Bootstrap class for the button
            },
            showCancelButton: false,                     // Hides the cancel button
            buttonsStyling: false                        // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Same")
{
    <script>
        Swal.fire({
            title: 'Duplicate!',           
            html: '<span class="text-danger">You Entered Same Enrollment in the Fields!</span>', // Message styled with danger color
            icon: 'warning',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-success',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
<style>
    .is-invalid {
        border-color: red;
    }

    .text-danger {
        color: red;
    }

    .arrow-container {
        position: relative;
        margin-bottom: 20px; /* Adjust as needed */
    }


    .noborder {
        border-color: white !important;
    }

    

    .colorchange {
        transition: color 0.3s ease;
        cursor: default;
    }

        .colorchange:hover {
            color: green;
            cursor: pointer;
        }

    .card-margin {
        margin-bottom: 1.875rem !important;
    }

    .card {
        border: 0 !important;
        box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -webkit-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -moz-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -ms-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        position: relative !important;
        display: flex !important;
        flex-direction: column !important;
        min-width: 0 !important;
        word-wrap: break-word !important;
        background-color: #ffffff !important;
        background-clip: border-box !important;
        border: 1px solid #e6e4e9 !important;
        border-radius: 8px !important;
    }

        .card .card-header.no-border {
            border: 0 !important;
        }

        .card .card-header {
            background: none !important;
            padding: 0 0.9375rem !important;
            font-weight: 500 !important;
            display: flex !important;
            align-items: center !important;
            min-height: 50px !important;
        }

    .card-header:first-child {
        border-radius: calc(8px - 1px) calc(8px - 1px) 0 0 !important;
    }


</style>
<script>
    $(document).ready(function () {
        $("#previousbtn").click(function () {
            $.ajax({
                url: '/studentgroups/studentgroups',
                type: "GET",
                success: function (response) {
                    $("#MainContainer").html(response);
                },
                error: function () {

                }
            });

        });
        $('.student-input').on('input', function () {
            let value = $(this).val().replace(/\D/g, ''); // Remove all non-digit characters

            if (value.length > 2) {
                value = value.substring(0, 2) + '-' + value.substring(2);
            }
            if (value.length > 9) {
                value = value.substring(0, 9) + '-' + value.substring(9);
            }

            // Trim the value if it exceeds the expected format length (13 characters, including dashes)
            if (value.length > 13) {
                value = value.substring(0, 13);
            }

            $(this).val(value);
        });

        $("#submitform").submit(function (e) {
            // Prevent form submission
            e.preventDefault();

            // Reset previous validation states
            $(".form-control").removeClass("is-invalid");
            $(".input-group-text").removeClass("text-danger");

            let isValid = true;

         

            if ($("#stu1").val().trim() === "" ) {
                $("#stu1").addClass("is-invalid");
                $(".input-group-text.email1").addClass("text-danger");
                isValid = false;
            }

            if ($("#stu2").val().trim() === "" ) {
                $("#stu2").addClass("is-invalid");
                $(".input-group-text.email2").addClass("text-danger");
                isValid = false;
            }

     

            // Ensure input fields do not exceed 13 characters
            $("#stu1, #stu2, #stu3").each(function () {
                if ($(this).val().length > 13) {
                    $(this).addClass("is-invalid");
                    isValid = false;
                }
            });

            // If the form is valid, proceed with the AJAX request
            if (isValid) {
                const formData = {
                    Name: $("#groupName").val(),
                    student1LEmail: $("#stu1").val(),
                    student2Email: $("#stu2").val(),
                    student3Email: $("#stu3").val(),
                    Batch: $("#Batch").val(),
                    Year: $("#Year").val(),
                };

                // Perform the AJAX request
                $.ajax({
                    type: "POST",
                    url: "/studentgroups/StudentGroups",
                    data: JSON.stringify(formData),
                    contentType: "application/json; charset=utf-8",  // Sending JSON
                    success: function (response) {
                        // Update the main container with the response
                        $("#MainContainer").html(response);
                    },
                    error: function (xhr) {
                        // Handle error
                        console.log("Error: " + xhr.status + " - " + xhr.statusText);
                    }
                });
            }
        });

    });

</script>

<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>