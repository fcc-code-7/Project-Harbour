@model FYP.Web.ViewModels.RoomInChargeViewModel


@{
    int counter = 0;
}
<!-- BEGIN: Content-->
<div id="RoomPageContainer">
    <div class="app-content content">
        <div class="content-overlay"></div>
        <div class="content-wrapper">
            <div class="content-header row">
            </div>
            <div class="content-body ">
                <section class="users-list-wrapper">
                    <div class="users-list-filter px-1">
                        <!-- Section 1 -->
                        <div class=" ">
                            <div class="p-3 bg-white text-black rounded-lg " style="height:80vh ; min-height:80vh">

                                <!-- Column 1: -->
                                <div class="scrollable-div overflow-auto p-1" style="min-height:100px;">
                                    <div class="w-full grid sm:grid-cols-1 lg:grid-cols-2 gap-4 ">
                                        <div class="text-2xl font-bold ">
                                            <h1 class="d-flex align-items-center justify-content-start justify-content-center-sm justify-content-center-md">
                                                <i class="feather icon-arrow-left btn p-0 m-0" id="previousbtn" style="font-size:30px"></i>
                                                <span class="mx-2">Assign/View</span>
                                            </h1>

                                        </div>


                                    </div>
                                    @if (Model == null)
                                    {
                                         
                                            <div class="container d-flex justify-content-center align-items-center" style="min-height: 58vh;">
                                                <div class="row justify-content-center align-items-center w-100">
                                                    <div class="col-12 col-md-6 col-sm-12 col-lg-6">
                                                        <div class="card">
                                                            <div class="card-header d-flex justify-content-center align-items-center">
                                                                <h5 class="card-title"><i class="feather icon-alert-triangle text-danger mx-1"></i>No Batch Exists</h5>
                                                            </div>
                                                            <div class="card-body text-center mb-3">
                                                                <p>It looks like there are currently no Batch Exist. Come Back Later</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                        </div>


                                    }
                                    else
                                    {
                                    @if (Model.Batchs.Any() )
                                    {
                                            <div class="row p-2">
                                                <!-- Batch -->
                                                <div class="col-12 col-lg-6 col-md-12 col-sm-12 order-sm-1 order-md-1">
                                                    <div class="form-group">
                                                        <label>Batch</label>
                                                        <fieldset>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text" id="basic-addon3">
                                                                        <i class="fa fa-graduation-cap" style="color: transparent; -webkit-text-stroke: 1px black;"></i>
                                                                    </span>
                                                                </div>
                                                                @if (Model.Batchs != null)
                                                                {
                                                                    @Html.DropDownListFor(model => model.Batch,
                                                                             new SelectList(Model.Batchs, Model.Batch),
                                                                             "Select Batch",
                                                                             new { @class = "form-control Batch", id = "Batch", required = "required" })
                                                                }
                                                                else
                                                                {
                                                                    <input type="text" class="form-control" placeholder="No Group Exist" aria-describedby="basic-addon1" readonly required>
                                                                }
                                                            </div>
                                                            <span asp-validation-for="Batchs" class="text-danger"></span>
                                                        </fieldset>
                                                    </div>
                                                </div>

                                                <!-- Evaluation -->
                                                <div class="col-12 col-lg-6 col-md-12 col-sm-12 order-sm-2 order-md-2">
                                                    <div class="form-group">
                                                        <label>Evaluation</label>
                                                        <fieldset>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text" id="basic-addon3">
                                                                        <i class="fa fa-pencil" style="color: transparent; -webkit-text-stroke: 1px black;"></i>
                                                                    </span>
                                                                </div>
                                                                @Html.DropDownListFor(model => model.Evaluation,
                                                                         new SelectList(new List<object>
                                                        {
                                                        new { Value = "", Text = "Select Evaluation" },
                                                        new { Value = "Proposal", Text = "Proposal" },
                                                        new { Value = "Mid", Text = "Mid" },
                                                        new { Value = "Final", Text = "Final" }
                                                        }, "Value", "Text", Model.Evaluation),
                                                                         new { @class = "form-control", id = "Evaluation", required = "required" })
                                                            </div>
                                                        </fieldset>
                                                    </div>
                                                </div>

                                                <!-- Incharge -->
                                                <div class="col-12 col-lg-6 col-md-12 col-sm-12 order-sm-3 order-md-3">
                                                    <div class="form-group">
                                                        <label>Incharge</label>
                                                        <fieldset>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text" id="basic-addon3">
                                                                        <i class="fa fa-user-circle-o" style="color: transparent; -webkit-text-stroke: 1px black;"></i>
                                                                    </span>
                                                                </div>
                                                                @if (Model.Evaluation != null)
                                                                {
                                                                    @if (Model.roomInCharges != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.Name,
                                                                                 new SelectList(Model.roomInCharges, "Id", "Name", Model.Name),
                                                                                 "Select Room Incharge",
                                                                                 new { @class = "form-control Name", id = "Name", required = "required" })
                                                                    }
                                                                    else
                                                                    {
                                                                        <input type="text" class="form-control" placeholder="Add a Room Incharge" aria-describedby="basic-addon1" readonly required>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <input type="text" class="form-control" placeholder="Select Evaluation First" aria-describedby="basic-addon1" readonly required>
                                                                }
                                                            </div>
                                                            <span asp-validation-for="roomInCharges" class="text-danger"></span>
                                                        </fieldset>
                                                    </div>
                                                </div>

                                                <!-- Rooms -->
                                                <div class="col-12 col-lg-6 col-md-12 col-sm-12 order-sm-4 order-md-4">
                                                    <div class="form-group">
                                                        <label>Rooms</label>
                                                        <fieldset>
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text" id="basic-addon3">
                                                                        <i class="fa fa-home" style="color: transparent; -webkit-text-stroke: 1px black;"></i>
                                                                    </span>
                                                                </div>
                                                                @if (Model.Evaluation != null)
                                                                {
                                                                    @if (Model.Rooms != null)
                                                                    {
                                                                        @Html.DropDownListFor(model => model.RoomAlloted,
                                                                                 new SelectList(Model.Rooms, "Id", "RoomNo", Model.RoomAlloted),
                                                                                 "Select Room",
                                                                                 new { @class = "form-control RoomAlloted", id = "RoomAlloted", required = "required" })
                                                                    }
                                                                    else
                                                                    {
                                                                        <input type="text" class="form-control" placeholder="Add a Room First" aria-describedby="basic-addon1" readonly required>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <input type="text" class="form-control" placeholder="Select Evaluation First" aria-describedby="basic-addon1" readonly required>
                                                                }
                                                            </div>
                                                            <span asp-validation-for="Rooms" class="text-danger"></span>
                                                        </fieldset>
                                                    </div>
                                                </div>

                                                <!-- Assign Button -->
                                                <div class="col-12 col-lg-12 col-md-12 col-sm-12 order-sm-5 order-md-5">
                                                    <div class="flex justify-center">
                                                        <button id="Assign" class="btn btn-primary">Assign</button>
                                                    </div>
                                                </div>
                                            </div>


                                        @* Room Incharge Display *@
                                        @if (Model.Batch != null)
                                        {
                                            <label>Assigned Room Incharges:</label>
                                            @if (Model.AllotedRoomIncharges != null && Model.AllotedRoomIncharges.Any())
                                            {

                                               
                                                   
                                                    <div class="">
                                                        <div class="row" id="RoomContainer">

                                                            @foreach (var item in Model.AllotedRoomIncharges)
                                                            {
                                                                <div class="col-12 col-md-6 col-sm-12 col-lg-4">
                                                                    <div class="card p-0">
                                                                        <div class="card-header no-border">
                                                                            <div class="widget-49-date-warning">
                                                                                <span class="badge bg-warning rounded-circle text-dark d-inline-flex align-items-center justify-content-center" style="width: 24px; height: 24px;">
                                                                                    @(counter = counter + 1)
                                                                                </span>
                                                                            </div>

                                                                            @*                                                                 <h5 class="card-title">@item.Name</h5>
                                                        *@                                                                <div class="ml-auto mx-1">
                                                                                <button type="button" class="btn btn-sm btn-danger deleteBTN text-white" data-id="@item.Id" data-batch="@item.Batch" data-eval="@item.Evaluation">Delete</button>
                                                                            </div>
                                                                        </div>
                                                                    <div class="card-body pt-0" >
                                                                            <div class="widget-49">
                                                                                <div style="overflow-x: auto;" class="table-responsive">
                                                                                    <table style="border-spacing: 0;">
                                                                                        <tr>
                                                                                            <td style="padding: 0; margin: 0;">
                                                                                                <span class="text-black fw-bold">Name:</span>
                                                                                                <span class="text-green-600 text-sm font-medium dark:bg-green-900 dark:text-green-300 mx-1">@item.Name</span>
                                                                                            </td>
                                                                                        </tr>
                                                                                        <tr>
                                                                                            <td style="padding: 0; margin: 0;">
                                                                                                <span class="text-black fw-bold">Room:</span>
                                                                                                <span class="text-green-600 text-sm font-medium dark:bg-green-900 dark:text-green-300 mx-1">@item.RoomAlloted</span>
                                                                                            </td>
                                                                                        </tr>
                                                                                        <tr>
                                                                                            <td style="padding: 0; margin: 0;">
                                                                                                <span class="text-black fw-bold">Evaluation:</span>
                                                                                                <span class="text-green-600 text-sm font-medium dark:bg-green-900 dark:text-green-300 mx-1">@item.Evaluation</span>
                                                                                            </td>
                                                                                        </tr>
                                                                                    </table>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }

                                                        </div>
                                                    </div>


                                            }
                                            else
                                            {
                                                <div class="container d-flex justify-content-center align-items-center" style="min-height: 58vh;">
                                                    <div class="row justify-content-center align-items-center w-100">
                                                        <div class="col-12 col-md-6 col-sm-12 col-lg-6">
                                                            <div class="card">
                                                                <div class="card-header d-flex justify-content-center align-items-center">
                                                                    <h5 class="card-title"><i class="feather icon-alert-triangle text-danger mx-1"></i>No Incharge Exists</h5>
                                                                </div>
                                                                <div class="card-body text-center mb-3">
                                                                    <p>It looks like there are currently no Room Incharges Exist for this Batch.</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }else{
                                            <div class="container d-flex justify-content-center align-items-center" style="min-height: 58vh;">
                                                <div class="row justify-content-center align-items-center w-100">
                                                    <div class="col-12 col-md-6 col-sm-12 col-lg-6">
                                                        <div class="card">
                                                            <div class="card-header d-flex justify-content-center align-items-center">
                                                                <h5 class="card-title"><i class="feather icon-alert-triangle text-danger mx-1"></i>No Batch Exists</h5>
                                                            </div>
                                                            <div class="card-body text-center mb-3">
                                                                <p>It looks like there are currently no Batch Exist. Come Back Later</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                    }
                                    }
                                </div>
                            </div>

                        </div>
                </section>
            </div>
        </div>
    </div>



    <!-- Delete Modal -->
    <div class="modal fade" id="deleteRoomModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Room</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this Room Incharge?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>

</div>
<!-- END: Content-->
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


<style>
    .error-field {
        border: 2px solid red;
    }

    .error-icon {
        color: red !important;
    }

    .scrollable-div {
        max-height: 58vh; /* Set the maximum height */


        overflow-x: hidden !important; /* Hide horizontal scrollbar */
    }

    .custom-badge-green {
        background-color: #ffffff; /* Tailwind bg-green-100 */
        color: #065f46; /* Tailwind text-green-800 */
        font-size: 0.65rem; /* Tailwind text-xs */
        font-weight: 500; /* Tailwind font-medium */
        margin-end: 0.5rem; /* Tailwind me-2 (margin-right in LTR) */
        padding: 0.125rem 0.125rem; /* Tailwind px-2.5 py-0.5 */
        border-radius: 0.25rem; /* Tailwind rounded */
        border: 1px solid #000000; /* Tailwind border-green-400 */
    }

    /* Dark mode styles */
    @@media (prefers-color-scheme: dark) {
        .custom-badge-green {
            background-color: #ffffff; /* Tailwind dark:bg-gray-700 */
            color: #6ee7b7; /* Tailwind dark:text-green-400 */
        }
    }
    /* For Chrome, Safari, Edge, and Opera */
    ::-webkit-scrollbar {
        width: 6px; /* Set the width of the scrollbar */
        height: 6px; /* Set the height of the scrollbar (for horizontal scrollbars) */
    }

    ::-webkit-scrollbar-track {
        background: transparent; /* Background of the scrollbar track */
    }

    ::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.2); /* Scrollbar color with transparency */
        border-radius: 10px; /* Rounded corners for the scrollbar */
    }

        ::-webkit-scrollbar-thumb:hover {
            background-color: rgba(0, 0, 0, 0.5); /* Darker on hover */
        }

    input[readonly] {
        background-color: #FFFFFF !important; /* Softer background */
        color: #607d8b; /* Dimmed text color */
        border: 1px solid #90a4ae; /* Soft border color */
        cursor: not-allowed; /* Keep the not-allowed cursor */
    }

    .arrow-container {
        position: relative;
        margin-bottom: 20px; /* Adjust as needed */
    }


    .noborder {
        border-color: white !important;
    }



    .colorchange {
        transition: color 0.3s ease;
        cursor: default;
    }

        .colorchange:hover {
            color: green;
            cursor: pointer;
        }

    .card-margin {
        margin-bottom: 1.875rem !important;
    }

    .card {
        border: 0 !important;
        box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -webkit-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -moz-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -ms-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        position: relative !important;
        display: flex !important;
        flex-direction: column !important;
        min-width: 0 !important;
        word-wrap: break-word !important;
        background-color: #ffffff !important;
        background-clip: border-box !important;
        border: 1px solid #e6e4e9 !important;
        border-radius: 8px !important;
    }

        .card .card-header.no-border {
            border: 0 !important;
        }

        .card .card-header {
            background: none !important;
            padding: 0 0.9375rem !important;
            font-weight: 500 !important;
            display: flex !important;
            align-items: center !important;
            min-height: 50px !important;
        }

    .card-header:first-child {
        border-radius: calc(8px - 1px) calc(8px - 1px) 0 0 !important;
    }

    .widget-49 .widget-49-title-wrapper {
        display: flex !important;
        align-items: center !important;
    }

        .widget-49 .widget-49-title-wrapper .widget-49-date-primary {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #edf1fc !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-primary .widget-49-date-day {
                color: #4e73e5 !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-primary .widget-49-date-month {
                color: #4e73e5 !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-secondary {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #fcfcfd !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-secondary .widget-49-date-day {
                color: #dde1e9 !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-secondary .widget-49-date-month {
                color: #dde1e9 !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-success {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #e8faf8 !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-success .widget-49-date-day {
                color: #17d1bd !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-success .widget-49-date-month {
                color: #17d1bd !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-info {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #ebf7ff !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-info .widget-49-date-day {
                color: #36afff !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-info .widget-49-date-month {
                color: #36afff !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-warning {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: floralwhite !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-warning .widget-49-date-day {
                color: #FFC868 !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-warning .widget-49-date-month {
                color: #FFC868 !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-danger {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #feeeef !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-danger .widget-49-date-day {
                color: #F95062 !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-danger .widget-49-date-month {
                color: #F95062 !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-light {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #fefeff !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-light .widget-49-date-day {
                color: #f7f9fa !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-light .widget-49-date-month {
                color: #f7f9fa !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-dark {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #ebedee !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-dark .widget-49-date-day {
                color: #394856 !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-dark .widget-49-date-month {
                color: #394856 !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-date-base {
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            flex-direction: column !important;
            background-color: #f0fafb !important;
            width: 4rem !important;
            height: 4rem !important;
            border-radius: 50% !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-date-base .widget-49-date-day {
                color: #68CBD7 !important;
                font-weight: 500 !important;
                font-size: 1.5rem !important;
                line-height: 1 !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-date-base .widget-49-date-month {
                color: #68CBD7 !important;
                line-height: 1 !important;
                font-size: 1rem !important;
                text-transform: uppercase !important;
            }

        .widget-49 .widget-49-title-wrapper .widget-49-meeting-info {
            display: flex !important;
            flex-direction: column !important;
            margin-left: 1rem !important;
        }

            .widget-49 .widget-49-title-wrapper .widget-49-meeting-info .widget-49-pro-title {
                color: #3c4142 !important;
                font-size: 14px !important;
            }

            .widget-49 .widget-49-title-wrapper .widget-49-meeting-info .widget-49-meeting-time {
                color: #B1BAC5 !important;
                font-size: 13px !important;
            }

    .widget-49 .widget-49-meeting-points {
        font-weight: 400 !important;
        font-size: 13px !important;
        margin-top: .5rem !important;
    }

        .widget-49 .widget-49-meeting-points .widget-49-meeting-item {
            display: list-item !important;
            color: #727686 !important;
        }

            .widget-49 .widget-49-meeting-points .widget-49-meeting-item span {
                margin-left: .5rem !important;
            }

    .widget-49 .widget-49-meeting-action {
        text-align: right !important;
    }

        .widget-49 .widget-49-meeting-action a {
            text-transform: uppercase !important;
        }

</style>
@if (ViewBag.success == "Existed")
{
    <script>
        Swal.fire({
            title: '<strong>Already Assigned!</strong>',  // HTML-formatted title with additional text
            icon: 'warning',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-warning',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });

    </script>
}
@if (ViewBag.success == "Assigned")
{
    <script>
        Swal.fire({
            title: '<strong>Room Assigned to Another!</strong><br><span style="color: red;">Delete it First to Re-Assign</span>',  // HTML-formatted title with additional text
            icon: 'warning',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-success',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Deleted")
{
    <script>
        Swal.fire({
            title: 'Successfully Deleted!',        // Title of the modal
            icon: 'success',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-danger',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Success")
{
    <script>
        Swal.fire({
            title: 'Room Assigned Successfully!',        // Title of the modal
            icon: 'success',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-success',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "SelectFirst")
{
    <script>
        Swal.fire({
            title: 'Select All Fields!',        // Title of the modal
            icon: 'warning',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-warning',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "NotFound")
{
    <script>
        Swal.fire({
            title: 'Data NotFound!',        // Title of the modal
            icon: 'danger',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-danger',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}

<script>
    $(document).ready(function () {
        $("#previousbtn").click(function () {
            $.ajax({
                url: '/studentgroups/RoomIncharges',
                type: "GET",
                success: function (response) {
                    $("#MainContainer").html(response);
                },
                error: function () {

                }
            });

        });

        $(document).off('change', '#Evaluation').on('change', '#Evaluation', function (e) {
            e.preventDefault();
            showLoadingSpinner();
            var batch = $("#Batch").val();
            var evaluation = $("#Evaluation").val();
            $.ajax({
                url: "/studentgroups/AssignIncharge",
                type: "GET",
                data: { Batch: batch, Evaluation: evaluation },
                success: function (response) {
                    hideLoadingSpinner();
                    $("#RoomPageContainer").html(response);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });
        $(document).off('change', '#Batch').on('change', '#Batch', function (e) {
            e.preventDefault();
            showLoadingSpinner();
            var batch = $("#Batch").val();
            $.ajax({
                url: "/studentgroups/AssignIncharge",
                type: "GET",
                data: { Batch: batch},
                success: function (response) {
                    hideLoadingSpinner();
                    $("#RoomPageContainer").html(response);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });
        $(document).off('change', '.Name').on('change', '.Name', function (e) {
            e.preventDefault();
            showLoadingSpinner();
            var batch = $("#Batch").val();
            var evaluation = $("#Evaluation").val();
            var name = $(this).val();
            $.ajax({
                url: "/studentgroups/AssignIncharge",
                type: "GET",
                data: { Batch: batch, Evaluation: evaluation , name: name},
                success: function (response) {
                    hideLoadingSpinner();
                    $("#RoomPageContainer").html(response);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });
        $(document).off('click', '#Assign').on('click', '#Assign', function (e) {
            e.preventDefault();

            showLoadingSpinner();
            var batch = $("#Batch").val();
            var roomAlloted = $("#RoomAlloted").val();
            var name = $("#Name").val();
            var evaluation = $("#Evaluation").val();

            $.ajax({
                url: "/studentgroups/AssignIncharge",
                type: "POST",
                data: { Batch: batch, RoomAlloted: roomAlloted, Name: name, Evaluation: evaluation },
                success: function (response) {
                    hideLoadingSpinner();
                    $("#MainContainer").html(response);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });
        var name = "";
        var batch = "";
        var eval = "";
        $(document).on('click', '.deleteBTN', function (e) {
            e.preventDefault();
            name = $(this).data("id");
            eval = $("#Evaluation").val();
            batch = $("#Batch").val();
            $('#deleteRoomModal').modal('show');
        });
        $(document).off('click', '#confirmDelete').on('click', '#confirmDelete', function (e) {
            e.preventDefault();
            $('#modalRoom').modal('hide');
            $('.modal-backdrop').remove();
            showLoadingSpinner();
            $.ajax({
                url: "/studentgroups/DeleteRoomAllotment",
                type: "POST",
                data: { id: name, Batch : batch , Evaluation : eval },
                success: function (response) {
                    hideLoadingSpinner();

                    $("#MainContainer").empty();
                    $("#MainContainer").html(response);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });

    });

</script>



