@model FYP.Web.ViewModels.FYPCommitteViewModel


@{

}
<!-- BEGIN: Content-->
<div id="RoomPageContainer">
    <div class="app-content content">
        <div class="content-overlay"></div>
        <div class="content-wrapper">
            <div class="content-header row">
            </div>
            <div class="content-body ">
                <section class="users-list-wrapper">
                    <div class="users-list-filter px-1">
                        <!-- Section 1 -->
                        <div class=" ">
                            <div class="p-3 bg-white text-black rounded-lg " style="height:80vh ; min-height:80vh">

                                <!-- Column 1: -->
                                <div class="" style="min-height:100px;">
                                    <div class="w-full grid sm:grid-cols-1 lg:grid-cols-2 gap-4 ">
                                        <div class=" text-2xl font-bold">
                                            <h1>
                                                Rooms
                                            </h1>
                                        </div>

                                    </div>
                                    @if (Model.Rooms.Any())
                                    {
                                    <button type="button" class="btn btn-sm btn-primary add"  id="AddRoom">Add</button>
                                        <div class="scrollable-div overflow-auto p-1 mt-2">
                                            <div class="row" id="RoomContainer">

                                                @foreach (var item in Model.Rooms)
                                                {
                                                    <div class="col-12 col-lg-4 col-md-12 col-sm-12">
                                                        <div class="card p-0">
                                                            <div class="card-header no-border">
                                                                <h5 class="card-title" data-id="@item.Id">@item.RoomNo</h5>
                                                                <div class="ml-auto mx-1">
                                                                    <button type="button" class="btn btn-sm btn-primary editBTN" data-id="@item.Id" data-room="@item.RoomNo">Edit</button>
                                                                </div>
                                                                <div class="">
                                                                    <button type="button" class="btn btn-sm btn-danger deleteBTN" data-id="@item.Id">Delete</button>
                                                                </div>

                                                            </div>
                                                        </div>

                                                    </div>

                                                }

                                            </div>
                                        </div>

                                    }
                                    else
                                    {
                                        <div class="container d-flex justify-content-center align-items-center" style="min-height: 58vh;">
                                            <div class="row justify-content-center align-items-center w-100">
                                                <div class="col-12 col-md-6 col-sm-12 col-lg-6">
                                                    <div class="card">
                                                        <div class="card-header text-center">
                                                            <h5 class="card-title">No Room Exists</h5>
                                                        </div>
                                                        <div class="card-body text-center mb-3">
                                                            <p>It looks like there are currently no Rooms available.</p>
                                                            <button class="btn btn-sm btn-primary" id="AddRoom">Add New Room</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                </section>
            </div>
        </div>
    </div>
    @* ADD MODAL *@
    <div class="modal fade " id="modalRoom" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Room</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center">
                    <div class="col-12 col-lg-12 col-md-12 col-sm-12">
                        <div class="form-group">
                            <label>Room No</label>
                            <fieldset>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">
                                            <i class="fa fa-home" style="color: transparent; -webkit-text-stroke: 1px black;"></i>
                                        </span>
                                    </div>
                                    <!-- Changed the input field ID -->
                                    <input type="text" class="form-control" id="NewRoom" placeholder="Enter Room No" aria-describedby="basic-addon1" name="Room" required>
                                </div>
                                <span asp-validation-for="Room" class="text-danger"></span>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="modalCloseRoom">Close</button>
                    <button type="button" class="btn btn-primary" id="SaveRoom">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    @* EDIT MODAL *@
    <div class="modal fade " id="modalRoomEdit" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">EDIT Room</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center">
                    <div class="col-12 col-lg-12 col-md-12 col-sm-12">
                        <div class="form-group">
                            <label>Room No</label>
                            <fieldset>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">
                                            <i class="fa fa-home" style="color: transparent; -webkit-text-stroke: 1px black;"></i>
                                        </span>
                                    </div>
                                    <!-- Changed the input field ID -->
                                    <input type="text" class="form-control" id="EditRoomVal" placeholder="Enter Room No" aria-describedby="basic-addon1" name="Room" required>
                                </div>
                                <span asp-validation-for="Room" class="text-danger"></span>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="modalEditCloseRoom">Close</button>
                    <button type="button" class="btn btn-primary" id="editRoom">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Delete Modal -->
    <div class="modal fade" id="deleteRoomModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Room</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this room?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="modalDeleteCancel" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>

</div>
<!-- END: Content-->
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


<style>

    .scrollable-div {
        max-height: 58vh; /* Set the maximum height */


        overflow-x: hidden !important; /* Hide horizontal scrollbar */
    }

    .custom-badge-green {
        background-color: #ffffff; /* Tailwind bg-green-100 */
        color: #065f46; /* Tailwind text-green-800 */
        font-size: 0.65rem; /* Tailwind text-xs */
        font-weight: 500; /* Tailwind font-medium */
        margin-end: 0.5rem; /* Tailwind me-2 (margin-right in LTR) */
        padding: 0.125rem 0.125rem; /* Tailwind px-2.5 py-0.5 */
        border-radius: 0.25rem; /* Tailwind rounded */
        border: 1px solid #000000; /* Tailwind border-green-400 */
    }

    /* Dark mode styles */
    @@media (prefers-color-scheme: dark) {
        .custom-badge-green {
            background-color: #ffffff; /* Tailwind dark:bg-gray-700 */
            color: #6ee7b7; /* Tailwind dark:text-green-400 */
        }
    }
    /* For Chrome, Safari, Edge, and Opera */
    ::-webkit-scrollbar {
        width: 6px; /* Set the width of the scrollbar */
        height: 6px; /* Set the height of the scrollbar (for horizontal scrollbars) */
    }

    ::-webkit-scrollbar-track {
        background: transparent; /* Background of the scrollbar track */
    }

    ::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.2); /* Scrollbar color with transparency */
        border-radius: 10px; /* Rounded corners for the scrollbar */
    }

        ::-webkit-scrollbar-thumb:hover {
            background-color: rgba(0, 0, 0, 0.5); /* Darker on hover */
        }

    input[readonly] {
        background-color: #FFFFFF !important; /* Softer background */
        color: #607d8b; /* Dimmed text color */
        border: 1px solid #90a4ae; /* Soft border color */
        cursor: not-allowed; /* Keep the not-allowed cursor */
    }

    .arrow-container {
        position: relative;
        margin-bottom: 20px; /* Adjust as needed */
    }


    .noborder {
        border-color: white !important;
    }



    .colorchange {
        transition: color 0.3s ease;
        cursor: default;
    }

        .colorchange:hover {
            color: green;
            cursor: pointer;
        }

    .card-margin {
        margin-bottom: 1.875rem !important;
    }

    .card {
        border: 0 !important;
        box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -webkit-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -moz-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        -ms-box-shadow: 0px 0px 10px 0px rgba(82, 63, 105, 0.1) !important;
        position: relative !important;
        display: flex !important;
        flex-direction: column !important;
        min-width: 0 !important;
        word-wrap: break-word !important;
        background-color: #ffffff !important;
        background-clip: border-box !important;
        border: 1px solid #e6e4e9 !important;
        border-radius: 8px !important;
    }

        .card .card-header.no-border {
            border: 0 !important;
        }

        .card .card-header {
            background: none !important;
            padding: 0 0.9375rem !important;
            font-weight: 500 !important;
            display: flex !important;
            align-items: center !important;
            min-height: 50px !important;
        }

    .card-header:first-child {
        border-radius: calc(8px - 1px) calc(8px - 1px) 0 0 !important;
    }

</style>
@if (ViewBag.success == "Existed")
{
    <script>
        Swal.fire({
            title: 'Already Exist!',        // Title of the modal
            icon: 'warning',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-warning',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Added")
{
   <script>
        Swal.fire({
            title: 'Successfully Added!',        // Title of the modal
            icon: 'success',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-success',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Deleted")
{
    <script>
        Swal.fire({
            title: 'Successfully Deleted!',        // Title of the modal
            icon: 'success',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-danger',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "NotFound")
{
    <script>
        Swal.fire({
            title: 'Room Not Found!',        // Title of the modal
            icon: 'danger',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-danger',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Failed")
{
    <script>
        Swal.fire({
            title: 'Failed to Delete!',        // Title of the modal
            text: 'Try Again!', // Message/content in the modal
            icon: 'danger',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-danger',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}
@if (ViewBag.success == "Updated")
{
   <script>
        Swal.fire({
            title: 'Successfully Updated!',        // Title of the modal
            icon: 'success',                // Warning icon for alerts
            confirmButtonText: 'OK',        // Text on the confirm button
            customClass: {
                confirmButton: 'btn btn-success',  // Bootstrap class for the button
            },
            showCancelButton: false,        // Hides the cancel button
            buttonsStyling: false,          // Disables default button styling
        });
    </script>
}

<script>
    $(document).ready(function () {
        var RoomId = null;
        var Room = null;

        $('#modalRoom').on('hidden.bs.modal', function () {
            $('#NewRoom').val(''); // Reset the input field when modal is closed
        });
        $(document).on('click', '#AddRoom', function (e) {
            e.preventDefault();
            $('#modalRoom').modal('show');
        });
        $(document).on('click', '#modalDeleteCancel', function (e) {
            e.preventDefault();
            $('#deleteRoomModal').modal('hide');
        }); 
        $(document).on('click', '#modalEditCloseRoom', function (e) {
            e.preventDefault();
            $('#modalRoomEdit').modal('hide');
        });
        $(document).on('click', '#modalCloseRoom', function (e) {
            e.preventDefault();
            $('#modalRoom').modal('hide');
        });
        $(document).off('click', '#SaveRoom').on('click', '#SaveRoom', function (e) {
            e.preventDefault();
            $('#modalRoom').modal('hide');
            $('.modal-backdrop').remove();
            showLoadingSpinner();
            var roomNo = $("#NewRoom").val();

            $.ajax({
                url: "/studentgroups/FetchRoom",
                type: "POST",
                data: { room: roomNo, isRoom: "true" },
                success: function (response) {
                    hideLoadingSpinner();

                    $("#MainContainer").empty();
                    $("#MainContainer").html(response);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });
        $(document).off('click', '#editRoom').on('click', '#editRoom', function (e) {
            e.preventDefault();
            $('#modalRoom').modal('hide');
            $('.modal-backdrop').remove();
            showLoadingSpinner();
            var roomNo = $("#EditRoomVal").val();
            $.ajax({
                url: "/studentgroups/FetchRoom",
                type: "POST",
                data: { room: roomNo, isRoom: "true", id: RoomId },
                success: function (response) {
                    hideLoadingSpinner();

                    $("#MainContainer").empty();
                    $("#MainContainer").html(response);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });
        $(document).on('click', '.editBTN', function (e) {
            e.preventDefault();
             RoomId = $(this).data("id");
             Room = $(this).data("room");
            $("#EditRoomVal").val(Room);
            $('#modalRoomEdit').modal('show');
        });
        $(document).on('click', '.deleteBTN', function (e) {
            e.preventDefault();
             RoomId = $(this).data("id");
            $('#deleteRoomModal').modal('show');
        });
        $(document).off('click', '#confirmDelete').on('click', '#confirmDelete', function (e) {
            e.preventDefault();
            $('#modalRoom').modal('hide');
            $('.modal-backdrop').remove();
            showLoadingSpinner();
            $.ajax({
                url: "/studentgroups/DeleteRoom",
                type: "POST",
                data: { id: RoomId },
                success: function (response) {
                    hideLoadingSpinner();

                    $("#MainContainer").empty();
                    $("#MainContainer").html(response);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoadingSpinner(); // Hide the loading spinner
                    console.error("Error fetching rooms:", textStatus, errorThrown);
                    alert("An error occurred while fetching the rooms. Please try again.");
                }
            });
        });

    });

</script>


